version: "3.8"
x-airflow-common:
  &airflow-common
  image: apache/airflow:latest
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    - AIRFLOW__CORE__FERNET_KEY:"jrRF6m2C3YJRGtqvcW1kkRcpc7M0BdNG96cDxOWR6Rg="
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./utils:/opt/airflow/utils
    - ./config:/opt/airflow/config
    - ./etls/extract:/opt/airflow/etls/extract
    - ./etls/load:/opt/airflow/etls/load
    - ./etls/transform:/opt/airflow/etls/transform
    - ./pipelines:/opt/airflow/pipelines
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - ./requirements.txt:/opt/airflow/requirements.txt
    - ./airflow-db/airflow.cfg:/opt/airlfow/airflow.cfg
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    hostname: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 3

  airflow-scheduler:
    <<: *airflow-common
    command: bash -c "pip install --no-cache-dir -r ./requirements.txt && airflow scheduler"
    container_name: airflow-scheduler
    hostname: airflow-scheduler
    depends_on:
      airflow-webserver:
        condition: service_healthy

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command: 
      - -c
      - ( airflow db init &&
        airflow users create
          --role Admin
          --username airflow
          --password airflow
          --email airflow@airflow.com
          --firstname airflow
          --lastname airflow )
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-db-volume:
  